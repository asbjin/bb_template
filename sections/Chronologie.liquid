
{% liquid
  assign heading = section.settings.heading
  assign heading_size = section.settings.heading_size
  assign heading_weight = section.settings.heading_weight
  assign heading_font = section.settings.heading_font
  assign heading_color = section.settings.heading_color

  assign heading_size_mobile = section.settings.heading_size_mobile
  

  assign subheading = section.settings.subheading
  assign subheading_size = section.settings.subheading_size
  assign subheading_weight = section.settings.subheading_weight
  assign subheading_font = section.settings.subheading_font
  assign subheading_color = section.settings.subheading_color

  assign subheading_size_mobile = section.settings.subheading_size_mobile

  

  assign block_heading_size = section.settings.block_heading_size
  assign block_heading_weight = section.settings.block_heading_weight
  assign block_heading_font = section.settings.block_heading_font
  assign block_heading_color = section.settings.block_heading_color

  assign block_heading_size_mobile = section.settings.block_heading_size_mobile


  assign block_content_size = section.settings.block_content_size
  assign block_content_weight = section.settings.block_content_weight
  assign block_content_font = section.settings.block_content_font
  assign block_content_color = section.settings.block_content_color

  assign block_content_size_mobile = section.settings.block_content_size_mobile


  assign num_line_background = section.settings.num_line_background
  assign num_line_color = section.settings.num_line_color
  

  assign layout_background = section.settings.layout_background
  assign layout_margin_top = section.settings.margin_top
  assign layout_margin_bottom = section.settings.layout_margin_bottom
  
%}

<style>

  .section-{{ section.id }} {
    border-top: solid #000000 0px;
    border-bottom: solid #000000 0px;
    background: {{ layout_background }};
    margin-top: {{ layout_margin_top }}px;
    margin-bottom: {{ layout_margin_bottom }}px;
    overflow: hidden;
  }
  
  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: 39px;
    padding-bottom: 39px;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
  
  .steps-heading-wrapper-{{ section.id }} {
    width: 100%;
  }

  .steps-heading-{{ section.id }} {
    text-align: center;
  }

  .steps-heading-{{ section.id }} * {
    margin: 0;
    font-size: {{ heading_size_mobile }}px;
    color: {{ heading_color }};
    font-family: {{ heading_font.family }}{% if heading_font.fallback_families != blank %}, {{ heading_font.fallback_families }}{% endif %} !important ;
    font-weight: {{ heading_weight }};
    line-height: 130%;
    text-transform: unset;
    text-decoration: none;
  }

  .steps-subheading-{{ section.id }} {
    text-align: center;
    margin-top: 16px;
  }

  .steps-subheading-{{ section.id }} * {
    margin: 0;
    font-size: {{ subheading_size_mobile }}px;
    color: {{ subheading_color }};
    font-family: {{ subheading_font.family }}{% if subheading_font.fallback_families != blank %}, {{ subheading_font.fallback_families}} {% endif %} !important;
    font-weight: {{ subheading_weight}};
    line-height: 150%;
    text-transform: unset;
    text-decoration: none;
  }

  .steps-body-{{ section.id }} {
    margin-top: 32px;
    display: flex;
    align-items: center;
  }
  
  .steps-wrapper-{{ section.id }} {
    flex: 1 1 auto;
  }

  .steps-step-{{ section.id }} {
    position: relative;
  }

  .steps-toggle-{{ section.id }} {
    display: flex;
    align-items: center;
    cursor: pointer;
    gap: 12px;
  }

  .steps-number-{{ section.id }} {
    min-width: 52px;
    width: 52px;
    height: 52px;
    border-radius: 100%;
    border: 2px solid {{ num_line_color }};
    display: flex;
    align-items: center;
    justify-content: center;
    background: {{ num_line_background }};
    color: {{ num_line_color }};
    text-align: center;
    font-size: {{ block_heading_size_mobile }}px;
    font-weight: {{ block_heading_weight }};
    font-family: {{ block_heading_font.family }}{% if block_heading_font.fallback_families != blank %}, {{ block_heading_font.fallback_families }}{% endif %} !important ;
    line-height: 100%;
    text-transform: uppercase;
  }

  .steps-step-{{ section.id }}.active .steps-number-{{ section.id }} {
    background: {{ num_line_color}};
    border: 2px solid {{ num_line_color }}; 
    color: {{ num_line_background }};
  }

  .steps-question-{{ section.id }} {
    margin: 0px;
    font-size: {{ block_heading_size_mobile }}px;
    color: {{ block_heading_color }};
    line-height: 150%;
    text-transform: unset;
    font-weight: {{ block_heading_weight }};
    font-family: {{ block_heading_font.family }}{% if block_heading_font.fallback_families != blank %}, {{ block_heading_font.fallback_families }}{% endif %} !important ;
  }

  .steps-answer-{{ section.id }} {
    transition: all 0.2s ease-in-out;
    overflow: hidden;
    margin-left: 26.0px;
    border-left: 2px solid {{ num_line_color }};
    padding-left: 38.0px;
    margin-top: 6px;
    padding-top: 16px !important;
    padding-bottom: 34px;
  }

  .steps-answer-{{ section.id }} * {
    margin: 0px;
    font-size: {{ block_content_size_mobile }}px;
    color: {{ block_content_color }};
    font-weight: {{ block_content_weight }};
    font-family: {{ block_content_font.family }}{% if block_content_font.fallback_families != blank %}, {{ block_content_font.fallback_families }}{% endif %} !important ;
    line-height: 160%;
    text-transform: unset;
  }

  .steps-answer-{{ section.id }} p {
    min-height: 10px;
  }

  .steps-answer-{{ section.id }} p:not(:first-child ) {
    margin-top: 10px;
  } 

  .steps-height-cal-{{ section.id }} {
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    padding-top: 16px;
    padding-bottom: 34px;
    margin-left: 26.0px;
    padding-left: 38.0px;
  }

  .steps-height-cal-{{ section.id }} * {
    margin: 0px;
    font-size: 16px;
    color: #a6a690;
    line-height: 160%;
    text-transform: unset;
  }

  .steps-height-cal-{{ section.id }} p {
    min-height: 10px;
  }

  .steps-height-cal-{{ section.id }} p:not(:first-child ) {
    margin-top: 10px;
  }  

  .steps-image-mobile-{{ section.id }} {
    margin-top: 16px;
    display: block;
    width: 100%;
    overflow: hidden;
    border-radius: 10px;
  }
  
  .steps-image-mobile-{{ section.id }} img,
  .steps-image-mobile-{{ section.id }} svg {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .steps-image-desktop-{{ section.id }} {
    display: none;
  }

  .steps-image-mobile-{{ section.id }} svg {
    background: #AFAFAF;
  }

  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ layout_margin_top }}px;
      margin-bottom: {{ layout_margin_bottom }}px;
      background: {{ layout_background }};
      margin-left: 0rem;
      margin-right: 0rem;
      border-radius: 0px;
    }
    
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: 52px;
      padding-bottom: 52px;
      padding-left: 5rem;
      padding-right: 5rem;
    }

    .steps-heading-wrapper-{{ section.id }} {
      max-width: 60%;
    }

    .steps-heading-{{ section.id }} {
      text-align: center;
    }
  
    .steps-heading-{{ section.id }} * {
      font-size: {{ heading_size }}px;
    }   

    .steps-subheading-{{ section.id }} {
      margin-top: 16px;
      text-align: center;
    }
  
    .steps-subheading-{{ section.id }} * {
      font-size: {{ subheading_size }}px;
    } 

    .steps-body-{{ section.id }} {
      margin-top: 40px;
      gap: 48px;
    }

    .steps-number-{{ section.id }} {
      min-width: 52px;
      width: 52px;
      height: 52px;
      font-size: {{ block_heading_size }}px;
    }

    .steps-question-{{ section.id }} {
      font-size: {{ block_heading_size }}px;
    }

    .steps-answer-{{ section.id }} {
      margin-left: 26.0px;
      padding-left: 38.0px;
    }

    .steps-answer-{{ section.id }} * {
      font-size: {{ block_content_size }}px;
    }

    .steps-height-cal-{{ section.id }} {
      margin-left: 26.0px;
      padding-left: 38.0px;
    }

    .steps-height-cal-{{ section.id }} * {
      font-size: {{ block_content_size }}px;
    }

    .steps-image-desktop-{{ section.id }} {
      display: none;
      flex-shrink: 0;
      width: 44%;
      overflow: hidden;
      border-radius: 10px;
    }

    .steps-image-desktop-{{ section.id }}.active {
      display: block;
    }

    .steps-image-desktop-{{ section.id }} img,
    .steps-image-desktop-{{ section.id }} svg {
      display: block;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .steps-image-desktop-{{ section.id }} svg {
      background-color: #AFAFAF;
    }

    .steps-image-mobile-{{ section.id }} {
      display: none;
    }
  }</style>
  <style>
    .section-{{ section.id }}-settings {
      max-width: 1200px;
    }
  </style>

  <style>    
    .steps-image-mobile-{{ section.id }}{
      aspect-ratio: 12/9; 
    }    
  </style>



  <style>
    @media(min-width: 1024px) {
      .steps-image-desktop-{{ section.id }}{
       aspect-ratio: 12/9; 
      }
    }
  </style>



  <style>
    .steps-heading-wrapper-{{ section.id }} {
      margin-left: auto;
      margin-right: auto;
    }
  </style>


<div class="section-{{ section.id }} steps-{{ section.id }}" style="background-color: {{ layout_background }}; background-image: ;">
  <div class="section-{{ section.id }}-settings">
    <div class="steps-heading-wrapper-{{ section.id }}">
      {% if heading != blank %}
        <div class="steps-heading-{{ section.id }}">
          <h2>{{ heading }}</h2>
        </div>
      {% endif %}
      {% if subheading != blank %}
        <div class="steps-subheading-{{ section.id }}">
          <p>{{ subheading }}</p>
        </div>
        {% endif %}
      
    </div>    
    <div class="steps-body-{{ section.id }}">
      <div class="steps-wrapper-{{ section.id }}">
        {% for block in section.blocks %}
          <div class="steps-step-{{ section.id }}" id="step_9mifiP">
            <div class="steps-toggle-{{ section.id }}">
              <div class="steps-number-{{ section.id }}">{{ forloop.index }}</div>
              <p class="steps-question-{{ section.id }}">{{ block.settings.heading }}</p>              
            </div>            
            <div class="steps-answer-{{ section.id }} hide" style="height: 0px; padding-bottom: 0px; padding-top: 0px;">
              {{ block.settings.content }}
              <div class="steps-image-mobile-{{ section.id }}">          
                {% if block.settings.image != blank %}
                  <img src="{{ block.settings.image | img_url: 'master' }}" alt="" loading="lazy">
                {% else %}
                  {{ 'product-4' | placeholder_svg_tag: 'placeholder_svg' }}
                {% endif %}
              </div>
            </div>
            <div class="steps-height-cal-{{ section.id }}">
              {{ block.settings.content }}
              <div class="steps-image-mobile-{{ section.id }}">          
                  {% if block.settings.image != blank %}
                  <img src="{{ block.settings.image | img_url: 'master' }}" alt="" loading="lazy">
                {% else %}
                  {{ 'product-4' | placeholder_svg_tag: 'placeholder_svg' }}
                {% endif %}             
              </div>
            </div>
          </div>
        {% endfor %}
        
      </div>
      
        <div class="steps-image-desktop-{{ section.id }}" data-id="step_9mifiP">          
          
            {% if block.settings.image != blank %}
                  <img src="{{ block.settings.image | img_url: 'master' }}" alt="" loading="lazy">
                {% else %}
                  {{ 'product-4' | placeholder_svg_tag: 'placeholder_svg' }}
                {% endif %}
                            
        </div>
    
       
    </div>
  </div>
</div>
{% schema %}
{
  "name": "Chronologie #3",
  "settings":[
    {
            "type": "header",
            "content": "This section is a property of PeakConversion",
            "info": "Do not sell or reproduce. contact us at franklinjounda@gmail.com for more info"
        },
        {
            "type": "header",
            "content": "Heading Settings"
        },
        {
            "type": "text",
            "id": "heading",
            "label": "Heading",
            "default": "Lorem headingsum"
        },
        {
            "type": "range",
            "id": "heading_size",
            "min": 12,
            "max": 100,
            "step": 1,
            "unit": "px",
            "label": "Heading Size",
            "default": 40
        },
        {
            "type": "select",
            "id": "heading_weight",
            "label": "Heading Font Weight",
            "options": [
                {
                    "value": "400",
                    "label": "Regular"
                },
                {
                    "value": "500", 
                    "label": "Medium"
                },
                {
                    "value": "600",
                    "label": "Semibold"
                },
                {
                    "value": "700",
                    "label": "Bold"
                }
            ],
            "default": "400"
        },
        {
            "type": "font_picker",
            "id": "heading_font",
            "label": "Heading Font",
            "default": "josefin_sans_n4"
        },
        {
            "type": "color",
            "id": "heading_color",
            "label": "Heading Color",
            "default": "#284634"
        },
        {
            "type": "range",
            "id": "heading_size_mobile",
            "min": 12,
            "max": 100,
            "step": 1,
            "unit": "px",
            "label": "Heading Size Mobile",
            "default": 28
        },
        {
            "type": "header",
            "content": "Subheading Settings"
        },
        {
            "type": "text",
            "id": "subheading",
            "label": "Subheading",
            "default": "Lorem subheadingsum dolor sit amet consectur adiscing concordea"
        },
        {
            "type": "range",
            "id": "subheading_size",
            "min": 12,
            "max": 100,
            "step": 1,
            "unit": "px",
            "label": "Subheading Size",
            "default": 18
        },
        {
            "type": "select",
            "id": "subheading_weight",
            "label": "Subheading Font Weight",
            "options": [
                {
                    "value": "400",
                    "label": "Regular"
                },
                {
                    "value": "500",
                    "label": "Medium"
                },
                {
                    "value": "600",
                    "label": "Semibold"
                },
                {
                    "value": "700",
                    "label": "Bold"
                }
            ],
            "default": "400"
        },
        {
            "type": "font_picker",
            "id": "subheading_font",
            "label": "Subheading Font",
            "default": "josefin_sans_n4"
        },
        {
            "type": "color",
            "id": "subheading_color",
            "label": "Subheading Color",
            "default": "#a6a690"
        },
        {
            "type": "range",
            "id": "subheading_size_mobile",
            "min": 12,
            "max": 100,
            "step": 1,
            "unit": "px",
            "label": "Subheading Size Mobile",
            "default": 16
        },
        {
            "type": "header",
            "content": "Block Heading Settings"
        },
        {
            "type": "range",
            "id": "block_heading_size",
            "min": 12,
            "max": 100,
            "step": 1,
            "unit": "px",
            "label": "Block Heading Size",
            "default": 24
        },
        {
            "type": "select",
            "id": "block_heading_weight",
            "label": "Block Heading Font Weight",
            "options": [
                {
                    "value": "400",
                    "label": "Regular"
                },
                {
                    "value": "500",
                    "label": "Medium"
                },
                {
                    "value": "600",
                    "label": "Semibold"
                },
                {
                    "value": "700",
                    "label": "Bold"
                }
            ],
            "default": "400"
        },
        {
            "type": "font_picker",
            "id": "block_heading_font",
            "label": "Block Heading Font",
            "default": "josefin_sans_n4"
        },
        {
            "type": "color",
            "id": "block_heading_color",
            "label": "Block Heading Color",
            "default": "#284634"
        },
        {
            "type": "range",
            "id": "block_heading_size_mobile",
            "min": 12,
            "max": 100,
            "step": 1,
            "unit": "px",
            "label": "Block Heading Size Mobile",
            "default": 20
        },
        {
            "type": "header",
            "content": "Block Content Settings"
        },
        {
            "type": "range",
            "id": "block_content_size",
            "min": 12,
            "max": 100,
            "step": 1,
            "unit": "px",
            "label": "Block Content Size",
            "default": 16
        },
        {
            "type": "select",
            "id": "block_content_weight",
            "label": "Block Content Font Weight",
            "options": [
                {
                    "value": "400",
                    "label": "Regular"
                },
                {
                    "value": "500",
                    "label": "Medium"
                },
                {
                    "value": "600",
                    "label": "Semibold"
                },
                {
                    "value": "700",
                    "label": "Bold"
                }
            ],
            "default": "400"
        },
        {
            "type": "font_picker",
            "id": "block_content_font",
            "label": "Block Content Font",
            "default": "josefin_sans_n4"
        },
        {
            "type": "color",
            "id": "block_content_color",
            "label": "Block Content Color"
        },
        {
            "type": "range",
            "id": "block_content_size_mobile",
            "min": 12,
            "max": 100,
            "step": 1,
            "unit": "px",
            "label": "Block Content Size Mobile",
            "default": 14
        },
        {
            "type": "header",
            "content": "Number Line Settings"
        },
        {
            "type": "color",
            "id": "num_line_background",
            "label": "Number Line Background Color",
            "default": "#ffffff"
        },
        {
            "type": "color",
            "id": "num_line_color",
            "label": "Number & Line & Border Color",
            "default": "#497e5a"
        },
        {
            "type": "header",
            "content": "Layout Settings"
        },
        {
            "type": "color",
            "id": "layout_background",
            "label": "Layout Background Color"
        },
        {
            "type": "range",
            "id": "margin_top",
            "min": 0,
            "max": 100,
            "step": 4,
            "unit": "px",
            "label": "Margin Top",
            "default": 0
        },
        {
            "type": "range",
            "id": "layout_margin_bottom",
            "min": 0,
            "max": 100,
            "step": 4,
            "unit": "px",
            "label": "Margin Bottom",
            "default": 0
        }
    ],
  "blocks": [
    {
      "type": "chronologie",
      "name": "step",
      "settings":[
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Lorem ipsum dolor"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content",
          "default": "<p> Lorem ipsum sit amet consectur adiscing minoloa, scolas hostis in bellum umbra sanctus expello nex </p>"
        }
      ]
    }
  ],
  "presets":[
    {
      "name": "Chronologie #3",
      "blocks": [
        {
          "type": "chronologie",
          "settings": {
            "heading": "Step 1: Planning",
            "content": "<p>Begin with thorough planning and research. Establish clear goals and objectives for your project to ensure success.</p>"
          }
        },
        {
          "type": "chronologie",
          "settings": {
            "heading": "Step 2: Development",
            "content": "<p>Execute your plan with precision. Focus on quality and attention to detail throughout the development phase.</p>"
          }
        },
        {
          "type": "chronologie",
          "settings": {
            "heading": "Step 3: Delivery",
            "content": "<p>Complete the final steps and deliver outstanding results. Review and refine to exceed expectations.</p>"
          }
        }
      ]
    }
  ]
}
{% endschema %}
<script>
  function initSteps5() {
    const answerPaddingTop = 16;
    const answerPaddingBottom = 34;
    const autoClose = true;
  
    const faqs = document.querySelectorAll('.steps-step-{{ section.id }}');
    const buttons = document.querySelectorAll('.steps-toggle-{{ section.id }}');
    const answers = document.querySelectorAll('.steps-answer-{{ section.id }}');
    const answersHeightCalElements = document.querySelectorAll('.steps-height-cal-{{ section.id }}');
    const images = document.querySelectorAll('.steps-image-desktop-{{ section.id }}');
  
    let activeIndex = -1;
  
    function calculateHeight(index) {
      return answersHeightCalElements[index].scrollHeight;
    }
  
    function openAnswer(index) {
      // If auto-close is enabled, close all other answers first
      if (autoClose) {
        answers.forEach((answer, i) => {
          if (i !== index && !answer.classList.contains('hide')) {
            closeAnswer(i);
          }
        });
      }
  
      const height = calculateHeight(index);
  
      answers[index].style.height = '0px';
      answers[index].style.paddingTop = '0px';
      answers[index].style.paddingBottom = '0px';
      
      // Force a reflow
      answers[index].offsetHeight;
  
      answers[index].style.height = `${height}px`;
      answers[index].style.paddingTop = `${answerPaddingTop}px`;
      answers[index].style.paddingBottom = `${answerPaddingBottom}px`;
      
      faqs[index].classList.add('active');
      activateImage(faqs[index].id);
      answers[index].classList.remove('hide');
    }
  
    function closeAnswer(index) {
      answers[index].style.height = '0px';
      answers[index].style.paddingTop = '0px';
      answers[index].style.paddingBottom = '0px';
      faqs[index].classList.remove('active');
  
      answers[index].addEventListener('transitionend', function handler() {
        answers[index].classList.add('hide');
        answers[index].removeEventListener('transitionend', handler);
      }, { once: true });
    }
  
    function toggleAnswer(index) {
      if (answers[index].classList.contains('hide')) {
        openAnswer(index);
        activeIndex = index;
      } else {
        closeAnswer(index);
        activeIndex = -1;
      }
    }
  
    function activateImage(itemId) {
      images.forEach((img) => img.classList.remove('active'));
      const correspondingImage = document.querySelector(`.steps-image-desktop-{{ section.id }}[data-id="${itemId}"]`);
      if (correspondingImage) {
        correspondingImage.classList.add('active');
      }
    }
  
    buttons.forEach((button, index) => {
      button.addEventListener('click', () => toggleAnswer(index));
    });
  
    function recalculateHeights() {
      answers.forEach((answer, index) => {
        if (!answer.classList.contains('hide')) {
          const height = calculateHeight(index);
          answer.style.height = `${height}px`;
        }
      });
    }
  
    let resizeTimer;
    window.addEventListener('resize', () => {
      clearTimeout(resizeTimer);
      resizeTimer = setTimeout(recalculateHeights, 250);
    });
  
    function initializeAnswers() {
      const initialOpenCount = Number('1');
      // If auto-close is enabled, only open the first step
      const stepsToOpen = autoClose ? Math.min(1, initialOpenCount) : initialOpenCount;
      for (let i = 0; i < Math.min(stepsToOpen, answers.length); i++) {
        openAnswer(i);
        activeIndex = i;
      }
    }
  
    // Create a MutationObserver to watch for changes in the section
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.type === 'childList' || mutation.type === 'subtree') {
          recalculateHeights();
        }
      });
    });
  
    // Start observing the section for changes
    const sectionElement = document.querySelector('.section-{{ section.id }}');
    observer.observe(sectionElement, { childList: true, subtree: true });
  
    // Initialize on DOMContentLoaded
    document.addEventListener('DOMContentLoaded', () => {
      initializeAnswers();
      // Recalculate heights after a short delay
      setTimeout(recalculateHeights, 100);
    });
  
    // Recalculate heights after window load
    window.addEventListener('load', () => {
      setTimeout(recalculateHeights, 100);
    });
  }
  
  initSteps5();
  
  if (Shopify.designMode) {
    document.addEventListener('shopify:section:unload', initSteps5);
    document.addEventListener('shopify:section:load', initSteps5);
  }
</script>